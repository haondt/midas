@using Haondt.Core.Extensions
@using Haondt.Core.Models
@code {
    [Parameter]
    public Optional<string> Id { get; set; } = new();
    [Parameter]
    public Optional<(string Id, bool IsDefaultConfig)> SelectedAccount { get; set; } = new();
    [Parameter]
    public string Name { get; set; } = "";
    [Parameter]
    public bool AddImportTag { get; set; } = false;
}

<div
    id="modal-container"
    class="modal is-active is-justify-content-flex-start pt-6"
    hx-swap-oob="true">
    <div 
        class="modal-background"
        _="
            on click
                remove .is-active from #modal-container
                set #modal-container's innerHTML to ''
            end
            on keydown(key) from elsewhere
                if the key is 'Escape'
                    send click to me
                end
            end
        "></div>
    <div class="modal-card">
        <header class="modal-card-head">
            <p class="modal-card-title">
                @(Id.HasValue ? "Edit" : "Create")
                Import Configuration</p>
            <button class="delete" _="on click send click to the previous .modal-background"></button>
        </header>
        <section class="modal-card-body">
            <form hx-post="/transaction-import/config" hx-swap="none">
                @if (Id.HasValue)
                {
                    <input style="display:none;" name="id" type="text" value="@Id.Value" />
                }
                @if (SelectedAccount.HasValue)
                {
                    <input style="display:none;" name="account" type="text" value="@SelectedAccount.Value.Id" />
                }
                <div class="field">
                    <label class="label">Name</label>
                    <div class="control">
                        <input name="name" class="input" type="text" value="@Name" />
                    </div>
                </div>
                <div class="field">
                    <div class="control">
                        <label class="checkbox">
                            @{
                                var attributes = new Dictionary<string, object>();
                                if (AddImportTag)
                                    attributes["checked"] = "";
                                <input type="checkbox" name="add-import-tag" @attributes="attributes" value="true"/>
                            }
                            Add tag unique to import
                        </label>
                    </div>
                </div>
                <div class="field">
                    <div class="control">
                        <label class="checkbox">
                            @{
                                var defaultAttributes = new Dictionary<string, object>();
                                if (SelectedAccount.As(a => a.IsDefaultConfig).Or(false))
                                    defaultAttributes["checked"] = "";
                                <input type="checkbox" name="set-default" @attributes="defaultAttributes" value="true"/>
                            }
                            Make this the default import configuration for this account
                        </label>
                    </div>
                </div>
            </form>
        </section>
        <footer class="modal-card-foot">
            <div class="buttons">
                <button class="button is-success" _="on click send submit to the previous <form/>">Save changes</button>
                <button class="button" _="on click send click to the previous .modal-background">Cancel</button>
            </div>
        </footer>
    </div>
</div>

