@using Haondt.Core.Models
@using SpendLess.Domain.Models
@using SpendLess.Web.Domain.Services

@code {
    [Parameter, EditorRequired]
    public required List<(string Message, int Count)> Warnings { get; set; }
    [Parameter, EditorRequired]
    public required List<(string Message, int Count, string SamplePayload)> Errors { get; set; }
    [Parameter]
    public List<string> NewAccounts { get; set; } = [];
    [Parameter]
    public Dictionary<string, int> NewCategories { get; set; } = [];
    [Parameter]
    public Dictionary<string, int> NewTags { get; set; } = [];
    [Parameter, EditorRequired]
    public required string JobId { get; set; }

    [Parameter, EditorRequired]
    public required decimal BalanceChange { get; set; }
    [Parameter, EditorRequired]
    public required string ImportAccountName { get; set; }

    private RenderFragment<(string Title, RenderFragment Inner)> CreateResultItem = (args) =>
        @<details open class="block">
            <summary class="is-flex is-flex-direction-row is-align-items-center is-justify-content-space-between">
                <p class="subtitle mb-2">@args.Title</p>
                <span class="indicator icon">
                    <i class="fas fa-chevron-left"/>
                </span>
            </summary>
            <div class="message mb-2">
                <div class="message-body">
                @args.Inner
                </div>
            </div>
        </details>;

}


<div class="box">
    <style>
        @@scope {
            .indicator {
                transition: transform 0.3s ease;
            }
            details[open] .indicator {
                transform: rotate(-90deg);
            }
            summary::marker {
                display: none;
            }
            summary:hover {
                cursor: pointer;
                .subtitle {
                    font-weight: 600;
                }
            }
        }
    </style>
    <div class="is-flex is-flex-direction-row is-align-items-center is-justify-content-space-between">
        <p class="title is-4">Dry Run Summary</p>
        <button 
            class="button is-info"
            hx-get="transaction-import/dry-run/@JobId/transactions"
            hx-swap="none">
            Review Transactions
        </button>
    </div>

    @CreateResultItem(("Changed Account Balance", 
    @<table class="table is-hoverable  is-fullwidth" >
        <tbody>
            <tr>
                <td>
                    @ImportAccountName
                </td>
                @if(BalanceChange < 0)
                {
                    <td class="has-text-danger">@StringFormatter.FormatCurrency(BalanceChange)</td>
                }
                else
                {
                    <td class="has-text-success">@StringFormatter.FormatCurrency(BalanceChange)</td>
                }
            </tr>
        </tbody>
    </table>))

    @if(NewCategories.Count > 0)
    {
        @CreateResultItem(("New Categories", 
        @<table class="table is-hoverable  is-fullwidth" >
            <thead>
                <tr>
                    <th>Category</th>
                    <th>Transactions</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var (name, transactions) in NewCategories)
                {
                    <tr>
                        <td>@name</td>
                        <td>@transactions</td>
                    </tr>
                }
            </tbody>
        </table>))
    }

        
    @if(NewTags.Count > 0)
    {
        @CreateResultItem(("New Tags", 
        @<table class="table is-hoverable  is-fullwidth" >
            <thead>
                <tr>
                    <th>New Tags</th>
                    <th>Transactions</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var (name, transactions) in NewTags)
                {
                    <tr>
                        <td>@name</td>
                        <td>@transactions</td>
                    </tr>
                }
            </tbody>
        </table>))
    }

    @if (NewAccounts.Count > 0)
    {
        @CreateResultItem(("New Accounts", 
        @<table class="table is-hoverable  is-fullwidth" >
            <tbody>
                @foreach(var name in NewAccounts)
                {
                    <tr><td>@name</td></tr>
                }
            </tbody>
        </table>))
    }

    @if (Warnings.Count > 0)
    {
        <p class="subtitle mb-2">Warnings</p>
        <div class="message is-warning">
            <div class="message-body">
                <table class="table is-hoverable  is-fullwidth" >
                    <thead>
                        <tr>
                            <th>Warning</th>
                            <th>Affected Transactions</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var (message, count) in Warnings)
                        {
                            <tr class="is-warning">
                                <td>
                                    @message
                                </td>
                                <td>@count</td>
                                <td>

                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    @if(Errors.Count > 0)
    {
        <p class="subtitle mb-2">Errors</p>
        <div class="message is-danger">
            <div class="message-body">
                <table class="table is-hoverable  is-fullwidth" >
                    <thead>
                        <tr>
                            <th>Error</th>
                            <th>Affected Transactions</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var (message, count, samplePayload) in Errors)
                        {
                            <tr class="is-danger">
                                <td>
                                    @message
                                </td>
                                <td>
                                    @count
                                </td>
                                <td><button 
                                    class="button"
                                    _="
                                        on click
                                            writeText('@samplePayload.Replace("'", "\\'")') into the navigator's clipboard
                                            set target to the first .copy-button-text in me
                                            set the target's innerHTML to 'Copied!'
                                                then wait 1.3s
                                                then set the target's innerHTML to 'Copy Request'
                                    ">
                                    <span class="icon is-small">
                                        <i class="fas fa-copy"></i>
                                    </span>
                                    <span class="copy-button-text">Copy Request</span>
                                </button></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    <hr/>
    <div class="field">
        <div class="control">
            <button 
                class="button is-primary"
                hx-post="/transaction-import/import/@JobId/start"
                hx-swap="innerHTML"
                hx-target="#import-result">
                Import Transactions
            </button>
        </div>
    </div>
</div>

<div id="import-result"></div>
