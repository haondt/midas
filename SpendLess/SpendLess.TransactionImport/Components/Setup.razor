@* @{
    var typeIdentity = "";
}
<form id="setup" 
    @(Model.IsSwap ? "hx-swap=\"true\"" : "")
    hx-post="/_event/TransactionImportDryRun" hx-encoding="multipart/form-data">
    <div class="field">
        <label class="label">Input file</label>
        <div class="file">
          <label class="file-label">
            <input 
                _="on change 
                    set files to the event's target.files
                    if files.length is 1
                        set file to files[0]
                        add .has-name to the closest .file
                        set (the next .file-name)'s innerHTML to the file's name
                        remove .is-hidden from the next .file-name
                    else
                        remove .has-name from the closest .file
                        add .is-hidden to the next .file-name
                    end
                    "
                class="file-input" type="file" name="file" accept=".csv" />
            <span class="file-cta">
              <span class="file-icon">
                <i class="fas fa-upload"></i>
              </span>
              <span class="file-label"> Choose a file… </span>
            </span>
            <span class="file-name is-hidden"></span>
          </label>
        </div>
    </div>
    <div class="field">
      <label class="label">Account</label>
      <div class="control">
        <div class="select">
          <select name="@nameof(TransactionImportSetupRequestDto.Account)"
              _="on change 
                    set account to the first <option[value=$(my value)]/> in me 
                    set defaultConfig to the account's @@sl-default-config
                        log defaultConfig">
            @foreach(var (id, (name, defaultConfig)) in Model.Accounts)
            {
                <option
                    @(defaultConfig.HasValue ? $"sl-default-config=\"{defaultConfig.Value}\"" : "")
                    @(id == Model.SelectedAccount ? "selected" : "")
                    value="@id">
                    @name
                </option>
            }
          </select>
        </div>
      </div>
    </div>
    <div class="field" id="import-configuration-selection-field">
        <label class="label">Import Configuration</label>
        <div class="control buttons" >
            <div class="select">
                <select name="config">
                    @foreach(var (id, name) in Model.Configurations)
                    {
                        <option
                            @(id == Model.SelectedConfiguration ? "selected" : "")
                            value="@id">
                            @name
                        </option>
                    }
                </select>
            </div>
                @if (Model.Configurations.Count > 0)
                {
                    <button class="button is-link is-outlined"
                    hx-get="/transaction-import-v2/config"
                    hx-include="closest form"
                    include-vals="'launch-modal':true"
                    hx-swap="none">
                        <span class="icon is-small">
                            <i class="fas fa-edit"></i>
                        </span>
                        <span>Edit</span>
                    </button>
                }
                <button class="button is-link is-outlined"
                hx-get="/transaction-import-v2/config"
                hx-include="closest form"
                include-vals="'launch-modal':true, create:true"
                hx-swap="none">
                    <span class="icon is-small">
                        <i class="fas fa-add"></i>
                    </span>
                    <span>Add</span>
                </button>
            </div>
    </div>
    <hr/>
    <div id="preprocess-file-controls">
        <div class="field">
            <div class="control">
                <button class="button is-primary">Preprocess File</button>
            </div>
        </div>
    </div>
</form>
 *@