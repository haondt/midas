@using Haondt.Web.Core.Components
@using Haondt.Identity.StorageKey
@using SpendLess.Accounts.Models
@using SpendLess.Accounts.Services
@using SpendLess.Domain.Models
@using SpendLess.Persistence.Services
@using SpendLess.Web.Domain.Services
@inject IAccountsService AccountsService

@code {

    [Parameter]
    public Dictionary<string, OwnedAccountDetails> AccountDtos { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        AccountDtos = (await Task.WhenAll((await AccountsService.GetOwned())
            .Select(async a => (a, await AccountsService.GetDetails(a.Key)))))
            .ToDictionary(t => t.a.Key, t => t.Item2);
    }
}

<div class="panel is-link" style="max-width:var(--spendless-form-page-width);margin:auto;">
    <p class="panel-heading">Accounts</p>
    <div class="panel-block">
        <div class="control is-flex is-flex-direction-column" style="gap:1rem;">
            <div>
                <button
                    class="button is-primary" 
                    hx-swap="none"
                    hx-get="/accounts/create">
                    Add Account
                </button>
            </div>
            <table class="table is-striped is-fullwidth">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Balance</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var account in AccountDtos)
                    {
                    <tr>
                        <td><a
                            hx-boost="true"
                            href="/account/@account.Key"
                            hx-target="#content">
                            @account.Value.Name</a>
                        </td>
                        <td>
                                @if(account.Value.Balance < 0)
                                {
                                    <p class="has-text-danger">@StringFormatter.FormatCurrency(account.Value.Balance)</p>
                                }
                                else if (account.Value.Balance > 0)
                                {
                                    <p class="has-text-success">@StringFormatter.FormatCurrency(account.Value.Balance)</p>
                                }
                                else
                                {
                                    <p>@StringFormatter.FormatCurrency(account.Value.Balance)</p>
                                }
                            </td>
                        <td>
                            <div class="is-flex is-flex-direction-column is-align-items-flex-end">
                                <div>
                                    <button class="button is-small"
                                        _="
                                            set :dd to the next .dropdown
                                            on click toggle .is-active on :dd
                                            on click from elsewhere
                                                if the event's target is not in :dd
                                                    remove .is-active from :dd">
                                        <span>actions</span>
                                        <span class="icon">
                                            <i class="fa-solid fa-caret-down"></i>
                                        </span>
                                    </button>
                                </div>
                                <div class="dropdown is-right">
                                    <div class="dropdown-menu">
                                        <div class="dropdown-content">
                                            <button 
                                                class="dropdown-item"
                                                hx-swap="none"
                                                _="on htmx:afterOnLoad
                                                    if event.detail.xhr.status == 204
                                                        then remove the closest <tr/>"
                                                hx-confirm="are you sure?"
                                                hx-delete="/account/@account.Key">
                                                <span class="icon has-text-danger">
                                                    <i class="fa-solid fa-trash"></i>
                                                </span>
                                                <span>delete</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

