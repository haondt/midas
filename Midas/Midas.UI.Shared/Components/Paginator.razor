@code {
    [Parameter, EditorRequired]
    public required long TotalPages { get; set; } 
    [Parameter, EditorRequired]
    public required long Page { get; set; }
    [Parameter]
    public long? PageSize { get; set; }

    [Parameter, EditorRequired]
    public required string OnChange { get; set; }


    private RenderFragment<(long Page, bool IsCurrent)> CreateSelectPageListItem = default!;
    private RenderFragment<(long Size, bool IsSelected)> CreateSelectPageSizeSelectItem = (args) =>
    {
        if (args.IsSelected)
            return@<option value="@args.Size" selected>@args.Size rows per page</option>;
        return@<option value="@args.Size">@args.Size rows per page</option>;
    };


    protected override void OnInitialized()
    {
        CreateSelectPageListItem = (args) =>
        {
            var attrs = new Dictionary<string, object>
                {
            { "class", "pagination-link"}
                };
            if (args.IsCurrent)
                attrs["class"] += " is-current";
            else
                attrs["_"] = $"on click halt the event then set #paginator-page's value to {args.Page} then {OnChange}";

            return@<li>
                <button @attributes="attrs">
                    @(args.Page)
                </button>
            </li>
    ;
        };
    }
}
<div id="paginator">
    <nav class="pagination is-right">
        <div class="select">
            <select name="page-size" 
                _="
                    on change 
                        set #paginator-total-pages's name to '' 
                        then @OnChange
                        then if #paginator-total-pages is not null
                            set #paginator-total-pages's name to 'total-pages'
                ">
                @CreateSelectPageSizeSelectItem((25, PageSize == 25))
                @CreateSelectPageSizeSelectItem((50, PageSize == 50))
                @CreateSelectPageSizeSelectItem((100, PageSize == 100))
            </select>
        </div>
        <input id="paginator-page" type="hidden" name="page" value="1" />
        <input id="paginator-total-pages" type="hidden" name="total-pages" value="@TotalPages" />
        <ul class="pagination-list">
            @if(Page > 2)
            {
                @CreateSelectPageListItem((1, false))
                <li><span class="pagination-ellipsis">&hellip;</span></li>
            }
            @if(Page > 1)
            {
                @CreateSelectPageListItem((Page - 1, false))
            }
            @CreateSelectPageListItem((Page, true))
            @if(TotalPages > Page)
            {
                @CreateSelectPageListItem((Page + 1, false))
            }
            @if(TotalPages > (Page + 1))
            {
                <li><span class="pagination-ellipsis">&hellip;</span></li>
                @CreateSelectPageListItem((TotalPages, false))
            }
        </ul>
    </nav>
</div>