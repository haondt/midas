@using Midas.UI.Shared.Models
@inject IEnumerable<NavigationSection> Sections
@inject IEnumerable<NavigationLink> UngroupedLinks

@code{
    private static RenderFragment<(NavigationItem Item, bool IsRoot)> RenderNavigationItem = (item) =>
    @<text>
        @switch(item.Item)
        {
            case NavigationLink link:
                <a 
                    hx-boost="true"
                    href="/@link.Slug"
                    hx-target="#content">
                    @link.Title
                </a>
                break;

            case NavigationSection sec:
                <p class="@(item.IsRoot ? "menu-label" : "menu-item")">@sec.Label</p>
                <ul class="menu-list">
                    @foreach(var child in sec.Children)
                    {
                        <li>
                            @RenderNavigationItem!((child, false))
                        </li>
                    }
                </ul>
                break;
        }

    </text>;

    private IEnumerable<NavigationSection> MergedSections = default!;

    private IEnumerable<NavigationSection> MergeNavigationSections(IEnumerable<NavigationSection> sections)
    {
        return sections.GroupBy(s => s.Label)
            .Select(grp => new NavigationSection
                {
                    Label = grp.Key,
                    Children = grp.SelectMany(q => q.Children)
                        .GroupBy(c => c is NavigationSection)
                        .SelectMany(childGroup =>
                        {
                            if (!childGroup.Key)
                                return childGroup;
                            var sections = childGroup.Cast<NavigationSection>();
                            return MergeNavigationSections(sections).Cast<NavigationItem>();
                        })
                        .ToList()
                });
    }

    protected override void OnInitialized()
    {
        if (UngroupedLinks.Any())
            MergedSections = MergeNavigationSections(Sections
                .Append(new NavigationSection
                    {
                        Label = "General",
                        Children = UngroupedLinks.Cast<NavigationItem>().ToList()
                    }));
        else
            MergedSections = MergeNavigationSections(Sections);

    }

}

<div class="panel is-primary">
    <p class="panel-heading">
        <span class="icon-text">
            <span class="icon">
                <i class="fas fa-hand-holding-dollar"></i>
            </span>
            <span>Midas</span>
        </span>
    </p>
    <div class="panel-block">
        <div class="menu is-flex-grow-1">
            @foreach(var sec in MergedSections)
            {
                @RenderNavigationItem((sec, true))
            }
        </div>
    </div>
</div>
