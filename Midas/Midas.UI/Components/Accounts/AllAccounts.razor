@using Midas.Domain.Accounts.Models
@using Midas.Domain.Accounts.Services
@inject IAccountsService AccountsService

@code {
    [Parameter]
    public Dictionary<string, AccountDetails> AccountDtos { get; set; } = [];

    [Parameter, EditorRequired]
    public int Page { get; set; } = 1;
    [Parameter]
    public int? TotalPages { get; set; }
    [Parameter]
    public int? PageSize { get; set; }
    [Parameter]
    public string? PartialAccountName { get; set; }

    private string Slug = "/accounts/all";

    protected override async Task OnInitializedAsync()
    {
        PageSize ??= 25;
        if (!TotalPages.HasValue)
        {
            var accounts = string.IsNullOrEmpty(PartialAccountName)
                ? await AccountsService.GetNumberOfAccounts()
                : await AccountsService.GetNumberOfAccountsByPartialName(PartialAccountName);
            TotalPages = (int)Math.Ceiling(accounts / (double)PageSize.Value);
        }
        if (!string.IsNullOrEmpty(PartialAccountName))
            AccountDtos = await AccountsService.SearchPagedDetailsByPartialName(PartialAccountName, PageSize.Value, Page);
        else
            AccountDtos = await AccountsService.GetPagedDetails(PageSize.Value, Page);
    }
}

<div class="panel is-link" style="max-width:var(--midas-form-page-width);margin:auto;">
    <p class="panel-heading">All Accounts</p>
    <div class="panel-block">
        <div class="control is-flex is-flex-direction-column" style="gap:1rem;">
            <div class="is-flex is-flex-direction-row is-flex-flex-wrap" style="gap:1rem;">
                <input
                    id="account-name-search-input"
                    class="input is-flex-grow-1" 
                    name="partial-account-name" 
                    placeholder="Search"
                    hx-get="/accounts/all"
                    hx-params="partial-account-name,page-size"
                    hx-include="#accounts-list"
                    hx-target="#accounts-list"
                    hx-select="#accounts-list"
                    hx-trigger="input changed delay:200ms, keyup[key=='Enter']" />
                <button
                    class="button is-primary" 
                    hx-swap="none"
                    hx-get="/accounts/create?include-in-net-worth=true">
                    Create New Account
                </button>
            </div>
            <AccountsList AccountDtos="@AccountDtos" Paginator="@(new((Page, TotalPages!.Value, PageSize!.Value, Slug, "#account-name-search-input")))"/>
        </div>
    </div>
</div>
