@using Haondt.Core.Models
@using Midas.Domain.Transactions.Services
@using Midas.UI.Models.TransactionsSelect
@using Midas.UI.Services.Transactions

@inject ITransactionFilterService TransactionFilterService
@inject ITransactionService TransactionService

@code {
    [Parameter, EditorRequired]
    public required TransactionsSelectionState Selection { get; set; }
    private long _selectedTransactions;

    [Parameter]
    public bool Swap { get; set; } = false;
    private Dictionary<string, object> _attributes = [];
    protected override async Task OnInitializedAsync()
    {
        if (Swap)
        {
            _attributes["hx-swap-oob"] = "outerHTML";
        }

        if (Selection.SelectNone)
            _selectedTransactions = 0;
        else
        {
            var parsedFilters = (await TransactionFilterService.ParseFiltersAsync(Selection.Filters)).ToList();
            _selectedTransactions = await TransactionService.GetTransactionsCount(parsedFilters);
        }
    }
}

<div id="select-transactions" @attributes=_attributes class="field">
    @foreach(var filter in Selection.Filters)
    {
        <input type="hidden" name="filter" value="@filter"/>
    }
    <input type="hidden" name="has-none-selected" value="@Selection.SelectNone.ToString().ToLower()"/>

    @if (Selection.SelectionEvent != null)
    {
        <input type="hidden" name="selection-event" value="@Selection.SelectionEvent"/>
    }
    <div class="field has-addons">
        <div class="control">
            <input class="input" type="text" readonly value="@_selectedTransactions transactions selected"/>
        </div>
        <div class="control">
        <button class="button is-info"
            hx-get="/transactions-select/search"
            hx-include="#select-transactions"
            hx-swap="none">
            Edit Selection
        </button>
        </div>
    </div>
</div>
